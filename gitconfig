[core]
  excludesfile = ~/.gitignore
[color]
  ui = auto
[color "grep"]
  linenumber = green
  match = red bold
  filename = magenta
[init]
  defaultBranch = main
[alias]
  st = status
  ci = commit
  br = branch
  co = checkout
  df = diff
  dc = diff --cached
  fix = commit --amend --reuse-message=HEAD
  lg = log -p
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lol2 = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lala = log --graph --decorate --pretty=format:'\"%C(yellow)%h %Cred%cr %Cgreen[%aN]%C(blue)%d%Creset %s' --abbrev-commit --all
  ls = ls-files
  follow = log -p --follow --no-merges
  committers = shortlog -nse --no-merges
  m = "!v() { git checkout $(__git_default_branch); }; v;"
  p = pull --rebase
  vanity = "!v() { git log --pretty=oneline --author=\"$(git config user.name)\" --abbrev-commit --no-merges; }; v;"
  changed-files = diff --name-only master
  rubostage = "!v() { rubocop $(git diff --name-only --staged); };v;"
  cleanup = "!v() { git fetch -p && git branch --merged main | grep  -v '\\*\\|main\\|develop' | xargs -n 1 git branch -d; }; v;"
  cleanupmaster = "!v() { git fetch -p && git branch --merged master | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d; }; v;"
  cleanz = cleanup

[push]
  default = matching
[user]
  name = Carsten Zimmermann
  email = cz@aegisnet.de
  signingkey = B527FFAA84D9324013EB217800D3C613ACC40E55
[log]
  showSignature = false
[diff]
  colorMoved = true
[pull]
  ff = only
