" Plugins used:
" rails, autoclose, endwise

colorscheme codeschool

filetype on  " Automatically detect file types.
set nocompatible
set nobackup
syntax enable

" Formatting (some of these are for coding in C and C++)
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set autoindent
set smarttab
set expandtab
set nocp incsearch
set cinwords=if,else,while,do,for,switch,case

set ruler  " Ruler on
set nu  " Line numbers on
set nowrap  " Line wrapping off

" Visual
set showmatch  " Show matching brackets.

set ai " Automatically set the indent of a new line (local to buffer)
set si " smartindent (local to buffer)

if has("autocmd")
  filetype indent on
endif

" http://stackoverflow.com/questions/1327978/sorting-words-not-lines-in-vim
vnoremap <C-s> d:execute 'normal i' . join(sort(split(getreg('"'))), ' ')<CR>

" http://vimcasts.org/episodes/tidying-whitespace/"
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre *.rb,*.erb,*.py,*.js,*.haml,*.coffee,*.rake,*.md :call <SID>StripTrailingWhitespaces()
autocmd FileType javascript setlocal shiftwidth=4 tabstop=4

call pathogen#infect()

hi TabLineFill ctermfg=Black ctermbg=White
hi TabLine ctermfg=LightBlue ctermbg=Black
hi TabLineSel ctermfg=White ctermbg=Blue

" Rspec stuff
map ,t  :!rspec %<CR>
map ,zr :!zeus rspec %<CR>
